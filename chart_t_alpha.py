from user.commons import load_variable
d = load_variable("sim_data.pkl")


beicheng_x = [5.028901734104046, 2.4277456647398843, 7.803468208092485, 10.92485549132948, 13.699421965317919, 16.30057803468208, 19.07514450867052, 21.502890173410403, 23.930635838150287, 26.358381502890172, 31.040462427745663, 32.2543352601156, 33.46820809248555, 34.85549132947977, 37.630057803468205, 40.40462427745665, 42.48554913294797, 44.91329479768786, 46.47398843930636, 47.51445086705202, 48.38150289017341, 48.72832369942196, 49.07514450867052, 50.63583815028902, 50.809248554913296, 51.32947976878613, 52.02312138728323, 52.716763005780344, 53.23699421965318, 55.31791907514451, 56.878612716763, 57.398843930635834, 58.26589595375722, 59.30635838150289, 59.82658959537572]
beicheng_y = [0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9496402877697843, 0.9712230215827339, 0.9352517985611511, 0.9748201438848921, 0.9640287769784173, 0.9424460431654677, 0.960431654676259, 0.9496402877697843, 0.9712230215827339, 0.9388489208633094, 0.9568345323741008, 0.8705035971223022, 0.7877697841726619, 0.8417266187050361, 0.7122302158273381, 0.5791366906474821, 0.525179856115108, 0.4388489208633094, 0.3489208633093525, 0.4244604316546763, 0.3381294964028777, 0.2589928057553957, 0.1798561151079137, 0.11510791366906475, 0.05035971223021583]
beicheng2_x = [5.028901734104046, 0.6936416184971098, 7.803468208092485, 10.92485549132948, 13.699421965317919, 16.30057803468208, 19.07514450867052, 21.502890173410403, 23.930635838150287, 26.358381502890172, 31.040462427745663, 32.2543352601156, 33.46820809248555, 34.85549132947977, 37.630057803468205, 40.40462427745665, 42.65895953757225, 44.91329479768786, 46.99421965317919, 47.861271676300575, 48.72832369942196, 49.07514450867052, 49.76878612716763, 51.50289017341041, 52.19653179190751, 52.543352601156066, 53.58381502890173, 55.31791907514451, 56.878612716763, 58.26589595375722, 58.786127167630056, 59.30635838150289, 60]
beicheng2_y = [0.9820143884892086, 0.9784172661870504, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9820143884892086, 0.9496402877697843, 0.9712230215827339, 0.9352517985611511, 0.9748201438848921, 0.9640287769784173, 0.9424460431654677, 0.920863309352518, 0.9316546762589929, 0.8848920863309353, 0.9136690647482015, 0.8705035971223022, 0.7877697841726619, 0.683453237410072, 0.5827338129496403, 0.658273381294964, 0.723021582733813, 0.7733812949640289, 0.7086330935251799, 0.6546762589928058, 0.60431654676259, 0.5107913669064749, 0.36330935251798563, 0.06115107913669065]
import matplotlib.pyplot as plt
import numpy as np
import numpy as np
from scipy.interpolate import interp1d

def interpolate_and_mean(x, y, num_points=1000):
    # Create a linear interpolation function based on the input x and y lists
    interpolation_function = interp1d(x, y, kind='linear')
    
    # Generate new x values for interpolation
    x_new = np.linspace(min(x), max(x), num=num_points)
    
    # Compute interpolated y values
    y_new = interpolation_function(x_new)
    
    # Calculate and return the mean of the interpolated y values
    return np.mean(y_new)


print(list(d.__dict__.keys()))
print(d.metric.shape)
fig, ax = plt.subplots(figsize=(4.2,2.5))
labels = ["X", "Y", "RCP", "LCP"]
x = np.linspace(0,60, len(d.metric[0]))
for i, l in enumerate(labels):
    ax.plot(x, d.metric.T[::1,i], label=l)
print(d.metric.shape)
print("mean", np.mean(d.metric.T[:40,1]))
ax.plot(beicheng_x, beicheng_y, label="X (Lou et al.)")
print("bx",interpolate_and_mean(beicheng_x, beicheng_y))
print("by",interpolate_and_mean(beicheng2_x, beicheng2_y))
print(np.mean(beicheng2_y))
ax.plot(beicheng2_x, beicheng2_y, label="Y (Lou et al.)")
plt.legend(ncols=2)
plt.xlabel("Twist angle [deg]")
plt.ylabel("$T_{+1,-1}$")
print(np.mean(d.metric))
plt.tight_layout()
plt.savefig("t_alpha.png")
plt.savefig("t_alpha.pdf")